{"version":3,"sources":["components/HexToRgb/HexToRgb.js","components/Steps/StepsForm/StepsForm.js","components/Steps/StepsItem/StepsItem.js","components/Steps/OutputList/OutputList.js","components/Steps/Steps.js","App.js","reportWebVitals.js","index.js"],"names":["HexToRgb","props","useState","color","setColor","textColor","setTextColor","backgroundColor","useRef","useEffect","length","match","hex","result","exec","parseInt","hexToRgb","current","style","className","ref","id","name","value","onChange","e","target","placeholder","htmlFor","StepsForm","form","onSubmit","type","date","distance","StepsItem","handleDell","itemId","handleEdit","onClick","OutputList","items","map","item","dateVie","StepItem","this","uuidv4","format","Date","Steps","initForm","distanceEdit","stepArr","setStepArr","setForm","checked","prevForm","evt","preventDefault","index","findIndex","prevArr","i","arr","push","sort","a","b","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.331d5371.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./desktop.scss\";\n\nconst HexToRgb = (props) => {\n  const [color, setColor] = useState(\"\");\n  const [textColor, setTextColor] = useState(\"#Привет\");\n  const backgroundColor = useRef();\n\n  const handelChangeColor = (e) => {\n    setColor(e.target.value);\n  };\n  useEffect(() => {\n    function hexToRgb(hex) {\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result\n        ? `rgb(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(\n            result[3],\n            16\n          )})`\n        : null;\n    }\n    if (color.length === 7 && color.match(/#[a-f0-9]{6}\\b/gi)) {\n      setTextColor(hexToRgb(color));\n      backgroundColor.current.style.backgroundColor = color;\n    } else if (color.length > 6 && !color.match(/#[a-f0-9]{6}\\b/gi)) {\n      setTextColor(\"#Ошибка\");\n      backgroundColor.current.style.backgroundColor = \"rgb(240, 104, 26)\";\n    }\n  }, [color]);\n\n  return (\n    <div className={\"HexToRgb\"} ref={backgroundColor}>\n      <form className={\"HexToRgb-row\"}>\n        <div>\n          <input\n            className={\"HexToRgb-input\"}\n            id=\"name\"\n            name=\"name\"\n            value={color}\n            onChange={handelChangeColor}\n            placeholder=\"Введите цвет\"\n          />\n          <label className={\"HexToRgb-label\"} htmlFor=\"name\">\n            {textColor}\n          </label>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default HexToRgb;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./desktop.scss\";\n\nconst StepsForm = (props) => {\n  const { form, onChange, onSubmit } = props;\n\n  return (\n    <form className=\"Steps-form\" onSubmit={onSubmit}>\n      <div className=\"form-item fild\">\n        <label className=\"lable\" htmlFor=\"date\">\n          Дата (ДД.ММ.ГГ)\n        </label>\n        <input\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          className={\"input-date  input-item\"}\n          value={form.date}\n          onChange={onChange}\n        />\n      </div>\n      <div className=\"form-item fild\">\n        <label className=\"lable\" htmlFor=\"distance\">\n          Пройденно км\n        </label>\n        <input\n          type=\"number\"\n          id=\"distance\"\n          name=\"distance\"\n          className={\"input-distance  input-item\"}\n          value={form.distance}\n          onChange={onChange}\n        />\n      </div>\n\n      <button className={\"input-button input-item\"}>OK</button>\n    </form>\n  );\n};\n\nStepsForm.propTypes = {\n  form: PropTypes.object,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default StepsForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./desktop.scss\";\n\nconst StepsItem = ({ date, distance, handleDell, itemId, handleEdit }) => {\n  return (\n    <div className={\"output-item\"}>\n      <div className={\"item-date\"}>{date} </div>\n      <div className={\"item-distance\"}> {distance}</div>\n      <div className={\"item-controls\"}>\n        <span\n          className={\"material-icons edit\"}\n          onClick={() => handleEdit(itemId)}\n        >\n          edit\n        </span>\n        <span\n          onClick={() => handleDell(itemId)}\n          className={\"material-icons clear\"}\n        >\n          clear\n        </span>\n      </div>\n    </div>\n  );\n};\n\nStepsItem.propTypes = {\n  date: PropTypes.string,\n  // distance: PropTypes.number,\n  handleDell: PropTypes.func,\n  itemId: PropTypes.string,\n};\n\nexport default StepsItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./desktop.scss\";\nimport StepsItem from \"../StepsItem/StepsItem\";\n\nconst OutputList = ({ items, handleDell, handleEdit }) => {\n  return (\n    <div className={\"output\"}>\n      <div className={\"output-title\"}>\n        <span className=\"output-title-item\">Дата (ДД.ММ.ГГ)</span>\n        <span className=\"output-title-item\">Пройденно км</span>\n        <span className=\"output-title-item\">Действия</span>\n      </div>\n      <div className={\"output-body\"}>\n        {items.map((item) => {\n          return (\n            <StepsItem\n              key={item.id}\n              itemId={item.id}\n              date={item.dateVie}\n              distance={item.distance}\n              handleDell={handleDell}\n              handleEdit={handleEdit}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nOutputList.propTypes = {\n  items: PropTypes.array,\n  handleDell: PropTypes.func,\n  handleEdit: PropTypes.func,\n};\n\nexport default OutputList;\n","import { v4 as uuidv4 } from \"uuid\";\nimport React, { useState } from \"react\";\nimport \"./desktop.scss\";\nimport StepsForm from \"./StepsForm/StepsForm\";\nimport OutputList from \"./OutputList/OutputList\";\nimport { format } from \"date-fns\";\n\nclass StepItem {\n  constructor(date, distance) {\n    this.id = uuidv4();\n    this.date = date;\n    this.dateVie = format(new Date(date), \"dd.MM.yy\");\n    this.distance = distance;\n  }\n}\n\nfunction Steps() {\n  const initForm = {\n    date: \"\",\n    distance: \"\",\n    distanceEdit: false,\n  };\n\n  const [stepArr, setStepArr] = useState([\n    new StepItem(\"2019-07-20\", 5.7),\n    new StepItem(\"2019-07-19\", 14.2),\n    new StepItem(\"2019-07-18\", 3.4),\n  ]);\n\n  const [form, setForm] = useState(initForm);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (form.distance) {\n      const index = stepArr.findIndex((item) => item.date === form.date);\n      ////\n      if (index > -1 && !form.distanceEdit) {\n        setStepArr((prevArr) => {\n          return prevArr.map((item, i) => {\n            return i === index\n              ? { ...item, distance: +item.distance + +form.distance }\n              : item;\n          });\n        });\n        setForm(initForm);\n        ////////\n      } else if (index > -1 && form.distanceEdit) {\n        setStepArr((prevArr) => {\n          return prevArr.map((item, i) => {\n            return i === index ? { ...item, distance: +form.distance } : item;\n          });\n        });\n        setForm(initForm);\n        ///////\n      } else {\n        setStepArr((prevArr) => {\n          const arr = [...prevArr];\n          arr.push(new StepItem(form.date, form.distance));\n          arr.sort((a, b) => {\n            if (new Date(a.date) > new Date(b.date)) return 1;\n            if (new Date(a.date) < new Date(b.date)) return -1;\n            return null;\n          });\n          return arr;\n        });\n        setForm(initForm);\n      }\n    }\n  };\n\n  const handleChange = ({ target }) => {\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    setForm((prevForm) => {\n      return { ...prevForm, [name]: value };\n    });\n  };\n\n  const handleDell = (id) => {\n    setStepArr((prevArr) => prevArr.filter((i) => i.id !== id));\n  };\n  const handleEdit = (id) => {\n    const index = stepArr.findIndex((item) => item.id === id);\n    setForm({\n      date: stepArr[index].date,\n      distance: stepArr[index].distance,\n      distanceEdit: true,\n    });\n  };\n  return (\n    <div className={\"Steps\"}>\n      <div className={\"Steps-row\"}>\n        <StepsForm\n          form={form}\n          onChange={handleChange}\n          onSubmit={handleSubmit}\n        />\n        <div className={\"Steps-output\"}>\n          <OutputList\n            items={stepArr}\n            handleDell={handleDell}\n            handleEdit={handleEdit}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Steps;\n","import \"./App.css\";\nimport HexToRgb from \"./components/HexToRgb/HexToRgb\";\nimport Steps from \"./components/Steps/Steps\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HexToRgb />\n      <Steps />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}